üéØ SISTEMA DE COMUNICACI√ìN UNIFICADO "HABL√Å CON NOSOTROS"
1Ô∏è‚É£ BOT√ìN PRINCIPAL
Aspecto visual:

Bot√≥n verde oval con texto "Habl√° con nosotros"
Tama√±o: 60px de alto, 160px de ancho m√≠nimo
√çcono de chat con 3 puntos a la izquierda del texto
Gradiente verde: #2E7D32 ‚Üí #1B5E20
Animaci√≥n de pulso (crece/decrece sutilmente cada 2 segundos)
Posici√≥n:

position: fixed;
bottom: 100px;    /* 100px desde abajo */
right: 20px;      /* 20px desde derecha */
z-index: 100000;  /* Siempre arriba de todo */
Comportamiento:

Al hacer click: se abre el men√∫ de 3 opciones ARRIBA del bot√≥n
El bot√≥n cambia de color a verde oscuro (#1B5E20)
La animaci√≥n de pulso se detiene
2Ô∏è‚É£ MEN√ö DE 3 OPCIONES (aparece al hacer click)
Las opciones aparecen 70px ARRIBA del bot√≥n principal, con animaci√≥n de deslizamiento desde abajo hacia arriba:

Opci√≥n 1: WHATSAPP (m√°s arriba)

Bot√≥n verde WhatsApp (#25D366)
√çcono: logo de WhatsApp
Texto: "WhatsApp"
Tama√±o: 140px ancho √ó 48px alto
Opci√≥n 2: CHAT (medio)

Bot√≥n verde SER AGRO (#2E7D32)
√çcono: burbujas de chat
Texto: "Chat"
Tama√±o: 140px ancho √ó 48px alto
Opci√≥n 3: LLAMAR (m√°s abajo, cerca del bot√≥n principal)

Bot√≥n blanco con texto oscuro
√çcono: tel√©fono
Texto: "Llamar"
Tama√±o: 140px ancho √ó 48px alto
Animaci√≥n:

Los 3 botones aparecen con un efecto de "slide-in" desde abajo
Cada bot√≥n aparece con un delay de 0.05s entre ellos
Efecto de fade-in (de transparente a visible)
3Ô∏è‚É£ ¬øA D√ìNDE REDIRIGE CADA BOT√ìN?
üü¢ WHATSAPP:
// URL que se abre:
https://api.whatsapp.com/send?phone=5493465432688&text=Hola,%20vengo%20desde%20el%20sitio%20de%20SER%20AGRO
// Se abre en nueva pesta√±a
window.open(url, '_blank');
// Despu√©s de abrir, el men√∫ se cierra autom√°ticamente
üí¨ CHAT (Mavilda):
// Abre una ventana de chat flotante EN LA MISMA P√ÅGINA
// La ventana aparece en la esquina inferior derecha
// Caracter√≠sticas:
- Header con foto de "mavilda ingeniera agronoma.png"
- T√≠tulo: "Mavilda - Ingeniera Agr√≥noma"
- Campo de texto para escribir mensajes
- Bot√≥n de enviar
// Backend:
URL del webhook: https://primary-production-396f31.up.railway.app/webhook/mavilda-chat
// Funcionalidad:
- Genera un sessionId √∫nico (ej: session_1760877662699_p6owos1rt)
- Al abrir, env√≠a autom√°ticamente "Hola" al backend
- El backend responde con un mensaje de saludo
- Cada mensaje que escrib√≠s se env√≠a al webhook con:
  {
    "message": "tu mensaje",
    "sessionId": "session_xxx"
  }
üìû LLAMAR (Vapi Voice):
// SDK de Vapi (desde CDN):
https://cdn.jsdelivr.net/npm/@vapi-ai/web@latest
// Credenciales:
publicKey: '5a29292f-d9cc-4a21-bb7e-ff8df74763cd'
assistantId: '776543a0-f4a2-4ed7-ad7a-f1fe0f6fd4d4'
// Comportamiento:
1. Al hacer click en "Llamar":
   - Se cierra el men√∫ de opciones
   - Se ejecuta: vapiInstance.start(assistantId)
   - Aparece un indicador de llamada activa
2. Indicador de llamada:
   - Texto: "En llamada..."
   - Animaci√≥n de pulso rojo
   - Bot√≥n rojo "Colgar" para finalizar
   - Posicionado a 100px desde abajo (mismo nivel que bot√≥n principal)
3. Al hacer click en "Colgar":
   - Se ejecuta: vapiInstance.stop()
   - El indicador desaparece
   - Vuelve a estado normal
4Ô∏è‚É£ C√ìDIGO DE LIMPIEZA AUTOM√ÅTICA
Cuando la p√°gina carga, se ejecuta este c√≥digo PRIMERO:

// Elimina service workers y cach√© (para evitar problemas de cach√©):
if ('serviceWorker' in navigator) {
    navigator.serviceWorker.getRegistrations().then(function(registrations) {
        for(let registration of registrations) {
            registration.unregister();
        }
    });
}
if ('caches' in window) {
    caches.keys().then(function(names) {
        for (let name of names) {
            caches.delete(name);
        }
    });
}
